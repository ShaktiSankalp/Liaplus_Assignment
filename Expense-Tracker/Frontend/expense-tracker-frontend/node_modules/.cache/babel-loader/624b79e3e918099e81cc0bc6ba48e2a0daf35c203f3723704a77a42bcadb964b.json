{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\deez\\\\Desktop\\\\LIAPLUS_Assignement\\\\Expense-Tracker\\\\Frontend\\\\expense-tracker-frontend\\\\src\\\\pages\\\\Dashboard.jsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport { Bar, Pie } from \"react-chartjs-2\";\nimport { Chart as ChartJS, BarElement, CategoryScale, LinearScale, ArcElement, Tooltip, Legend } from \"chart.js\";\nimport api from \"../api/api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(BarElement, CategoryScale, LinearScale, ArcElement, Tooltip, Legend);\nconst Dashboard = () => {\n  _s();\n  const [expenses, setExpenses] = useState([]);\n  useEffect(() => {\n    const fetchExpenses = async () => {\n      try {\n        const res = await api.get(\"/expenses\");\n        setExpenses(res.data);\n      } catch (err) {\n        console.error(\"Failed to fetch expenses:\", err);\n      }\n    };\n    fetchExpenses();\n  }, []);\n\n  // Group by category\n  const categoryMap = {};\n  expenses.forEach(exp => {\n    categoryMap[exp.category] = (categoryMap[exp.category] || 0) + exp.amount;\n  });\n\n  // Group by month\n  const monthMap = {};\n  expenses.forEach(exp => {\n    const month = new Date(exp.date).toLocaleString(\"default\", {\n      month: \"short\"\n    });\n    monthMap[month] = (monthMap[month] || 0) + exp.amount;\n  });\n  const pieData = {\n    labels: Object.keys(categoryMap),\n    datasets: [{\n      data: Object.values(categoryMap),\n      backgroundColor: [\"#f87171\", \"#60a5fa\", \"#34d399\", \"#fbbf24\", \"#c084fc\"]\n    }]\n  };\n  const barData = {\n    labels: Object.keys(monthMap),\n    datasets: [{\n      label: \"Monthly Expenses\",\n      data: Object.values(monthMap),\n      backgroundColor: \"#60a5fa\"\n    }]\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen p-6 text-white\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-3xl font-bold mb-6 text-center\",\n      children: \"Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid grid-cols-1 md:grid-cols-2 gap-8\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-white/10 p-4 rounded-lg shadow-lg backdrop-blur\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"text-xl font-semibold mb-4\",\n          children: \"Expenses by Category\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Pie, {\n          data: pieData\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-white/10 p-4 rounded-lg shadow-lg backdrop-blur\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"text-xl font-semibold mb-4\",\n          children: \"Monthly Expenses\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Bar, {\n          data: barData\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"XCaxB2DEspMpdgcH+IrrPBpyP4o=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["useEffect","useState","Bar","Pie","Chart","ChartJS","BarElement","CategoryScale","LinearScale","ArcElement","Tooltip","Legend","api","jsxDEV","_jsxDEV","register","Dashboard","_s","expenses","setExpenses","fetchExpenses","res","get","data","err","console","error","categoryMap","forEach","exp","category","amount","monthMap","month","Date","date","toLocaleString","pieData","labels","Object","keys","datasets","values","backgroundColor","barData","label","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/deez/Desktop/LIAPLUS_Assignement/Expense-Tracker/Frontend/expense-tracker-frontend/src/pages/Dashboard.jsx"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport { Bar, Pie } from \"react-chartjs-2\";\r\nimport {\r\n  Chart as ChartJS,\r\n  BarElement,\r\n  CategoryScale,\r\n  LinearScale,\r\n  ArcElement,\r\n  Tooltip,\r\n  Legend,\r\n} from \"chart.js\";\r\nimport api from \"../api/api\";\r\n\r\nChartJS.register(\r\n  BarElement,\r\n  CategoryScale,\r\n  LinearScale,\r\n  ArcElement,\r\n  Tooltip,\r\n  Legend\r\n);\r\n\r\nconst Dashboard = () => {\r\n  const [expenses, setExpenses] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchExpenses = async () => {\r\n      try {\r\n        const res = await api.get(\"/expenses\");\r\n        setExpenses(res.data);\r\n      } catch (err) {\r\n        console.error(\"Failed to fetch expenses:\", err);\r\n      }\r\n    };\r\n\r\n    fetchExpenses();\r\n  }, []);\r\n\r\n  // Group by category\r\n  const categoryMap = {};\r\n  expenses.forEach((exp) => {\r\n    categoryMap[exp.category] = (categoryMap[exp.category] || 0) + exp.amount;\r\n  });\r\n\r\n  // Group by month\r\n  const monthMap = {};\r\n  expenses.forEach((exp) => {\r\n    const month = new Date(exp.date).toLocaleString(\"default\", { month: \"short\" });\r\n    monthMap[month] = (monthMap[month] || 0) + exp.amount;\r\n  });\r\n\r\n  const pieData = {\r\n    labels: Object.keys(categoryMap),\r\n    datasets: [\r\n      {\r\n        data: Object.values(categoryMap),\r\n        backgroundColor: [\"#f87171\", \"#60a5fa\", \"#34d399\", \"#fbbf24\", \"#c084fc\"],\r\n      },\r\n    ],\r\n  };\r\n\r\n  const barData = {\r\n    labels: Object.keys(monthMap),\r\n    datasets: [\r\n      {\r\n        label: \"Monthly Expenses\",\r\n        data: Object.values(monthMap),\r\n        backgroundColor: \"#60a5fa\",\r\n      },\r\n    ],\r\n  };\r\n\r\n  return (\r\n    <div className=\"min-h-screen p-6 text-white\">\r\n      <h2 className=\"text-3xl font-bold mb-6 text-center\">Dashboard</h2>\r\n\r\n      <div className=\"grid grid-cols-1 md:grid-cols-2 gap-8\">\r\n        <div className=\"bg-white/10 p-4 rounded-lg shadow-lg backdrop-blur\">\r\n          <h3 className=\"text-xl font-semibold mb-4\">Expenses by Category</h3>\r\n          <Pie data={pieData} />\r\n        </div>\r\n\r\n        <div className=\"bg-white/10 p-4 rounded-lg shadow-lg backdrop-blur\">\r\n          <h3 className=\"text-xl font-semibold mb-4\">Monthly Expenses</h3>\r\n          <Bar data={barData} />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}